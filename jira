#!/usr/bin/env bash

GIT_SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"


jira_conventionnal_branchnames() {
  var_color
#https://github.com/nvie/gitflow
  declare -gA CONVENTIONAL_GITFLOW_BRANCH_TYPE
  CONVENTIONAL_GITFLOW_BRANCH_TYPE['feature']='Feature branch'
  CONVENTIONAL_GITFLOW_BRANCH_TYPE['bugfix']='Bugfix Branch'
  CONVENTIONAL_GITFLOW_BRANCH_TYPE['hotfix']='Hotfix branch '
  CONVENTIONAL_GITFLOW_BRANCH_TYPE['release']='Release branch'

  declare -gA CONVENTIONAL_JIRA_BRANCHNAMES
  CONVENTIONAL_JIRA_BRANCHNAMES['branchtype/JIRA-ISSUE-KEY']='Changes in the core of the repository%b'
  CONVENTIONAL_JIRA_BRANCHNAMES['branchtype/JIRA-ISSUE-KEY-shortdescription']='Documentation only changes'
}


pattern_match_regexp(){
  if [[ $1 =~ $2 ]] ; then
    printf "true"
  else 
    printf "false"
  fi
}

jira_gitflow_branchname_is_conventional(){

  JIRA_ID_IN_CURRENT_BRANCH_NAME=$(echo "$1" | cut -d"/" -f2)
  REGEXP="^[a-zA-Z0-9]*-[0-9]*($|-|_)+($|[a-zA-Z0-9]*)"
  
  printf $(pattern_match_regexp $JIRA_ID_IN_CURRENT_BRANCH_NAME $REGEXP)
  
}


jira_gitflow_branchtype_is_conventional(){

  CURRENT_BRANCH_TYPE=$(echo "$1" | cut -d"/" -f1)
  REGEXP="^technical|"$(IFS='|'; echo "${!CONVENTIONAL_GITFLOW_BRANCH_TYPE[*]}")

  printf $(pattern_match_regexp $CURRENT_BRANCH_TYPE $REGEXP)

}

jira_gitflow_conventionnal_branchname_guidelines() {
  var_color
  jira_conventionnal_branchnames

  printf "\n%bGuidelines for namming branch using gitflow and jira workflow from \n *GITFLOW\t %bgithub.com/nvie/gitflow%b\n *ATLASIAN\t %bconfluence.atlassian.com/bitbucketserver/using-branches-in-bitbucket-server-776639968.html%b\n\n" "${YELLOW}" "${RESET}" "${YELLOW}" "${RESET}" "${YELLOW}" 

  for prefix in "${!CONVENTIONAL_GITFLOW_BRANCH_TYPE[@]}"; do
    printf "%b%s%b/JIRA-ISSUE-KEY(-description)%b%b\n" "${GREEN}" "${prefix}" "${BLUE}" "${RESET}"
    printf "\t%s\n" "${CONVENTIONAL_GITFLOW_BRANCH_TYPE[${prefix}]}"
  done


   printf "\n\n%b Example%b : \n\tfeature/JIRAKEY-123 \n\tbugifx/JIRAKEY-123-authentication-is-ko\n" "${YELLOW}" "${RESET}"
}

jira_branchname_by_regexp_is_ok(){

  local BRANCH_REGEXP
  local CURRENT_BRANCH_NAME

  if [[ "$#" -eq 0 ]]; then
    return false
  
  elif [[ "$#" -eq 1 ]]; then
      # "No Regexp provided for branch name , use gitflow convention"
      CURRENT_BRANCH_NAME=`echo ${1}`
      BRANCH_REGEXP="^(feature|bugfix|hotfix|release|technical)/[a-zA-Z0-9]*-[0-9]*($|-|_)+($|[a-zA-Z0-9]*)"  
  
  elif [[ "$#" -eq 2 ]]; then
    CURRENT_BRANCH_NAME=`echo ${1}`
    BRANCH_REGEXP=`echo ${2}`
  fi
  
  printf $(pattern_match_regexp $CURRENT_BRANCH $BRANCH_REGEXP)
  

}

jira_issuekey_from_branchname(){

  local BRANCH_REGEXP
  local CURRENT_BRANCH_NAME

  if [[ "$#" -eq 0 ]]; then
    return false
  
  elif [[ "$#" -eq 1 ]]; then
    
      # "No Regexp provided for branch name , use gitflow convention"
      CURRENT_BRANCH_NAME=`echo ${1}`

      #3 capturing groups.Those are specified by parathense ([a-zA-Z0-9]*-[0-9]*) , ($|-|_) ,($|[a-zA-Z0-9]*)
      #looking for ISSUEKEY-AAAA from feature/ISSUEKEY-AAAA_description
      BRANCH_REGEXP="^.*/([a-zA-Z0-9]*-[0-9]*)($|-|_)+($|[a-zA-Z0-9]*)"
                
  elif [[ "$#" -eq 2 ]]; then
    CURRENT_BRANCH_NAME=`echo ${1}`
    BRANCH_REGEXP=`echo ${2}`
  fi

  if [[ $CURRENT_BRANCH =~ $BRANCH_REGEXP ]] ; then
    printf "${BASH_REMATCH[1]}"
  else
    printf ""
  fi

}

jira_issuekey_in_commitmsg(){
  
  if [[ "$#" -lt 2 ]]; then
      printf "false"
      return
  fi

  local JIRA_ISSUE_KEY_PATTERN=`echo ${1}*-[0-9]*$`
  
  printf $(pattern_match_regexp $CURRENT_BRANCH $BRANCH_REGEXP)
}


jira_comment_issuekey_conform_to_branchname(){
  
  if [[ "$#" -lt 2 ]]; then
      printf "false"
      return
  fi
  local JIRA_ISSUE_KEY_PATTERN=`^echo ${1}*-[0-9]*$`
  
  printf $(pattern_match_regexp $2 $BRANCH_REGEXP)
  
}

jira_smart_commit_is_conventional(){
  jira_commit_comment
  SMART_COMMIT_COMMENT=^$(echo "[[:space:]]*(a-zA-Z0-9)[[:space:]]*($COMMENT_KEY)*")
  printf $(pattern_match_regexp $1 $SMART_COMMIT_COMMENT)
}


jira_commit_comment(){
  declare -gA COMMENT_KEY="#comment"
}
